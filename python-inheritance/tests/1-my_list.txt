# Test for MyList class

>>> MyList = __import__('1-my_list').MyList

# Test with integers
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

# Test with negative numbers
>>> my_list.append(-1)
>>> my_list.print_sorted()
[-1, 1, 2, 3, 4, 5]

# Test with duplicate numbers
>>> my_list.append(4)
>>> my_list.print_sorted()
[-1, 1, 2, 3, 4, 4, 5]

# Test with floats
>>> float_list = MyList()
>>> float_list.append(3.14)
>>> float_list.append(2.71)
>>> float_list.append(-1.0)
>>> float_list.print_sorted()
[-1.0, 2.71, 3.14]

# Test with infinity and NaN
>>> import math
>>> special_numbers = MyList()
>>> special_numbers.append(math.inf)
>>> special_numbers.append(-math.inf)
>>> special_numbers.append(math.nan)
>>> special_numbers.print_sorted()
[-inf, inf, nan]

# Test with strings
>>> str_list = MyList()
>>> str_list.append("apple")
>>> str_list.append("banana")
>>> str_list.append("cherry")
>>> str_list.print_sorted()
['apple', 'banana', 'cherry']

# Test with mixed types (this might raise an exception depending on Python version)
>>> mixed_list = MyList()
>>> mixed_list.append(1)
>>> mixed_list.append("two")
>>> mixed_list.append(3.0)
>>> mixed_list.print_sorted()
Traceback (most recent call last):
    ...
TypeError: '<' not supported between instances of 'str' and 'int'

# Test with empty list
>>> empty_list = MyList()
>>> empty_list.print_sorted()
[]

# Test that the original list is not modified
>>> original = MyList([5, 4, 3, 2, 1])
>>> print(original)
[5, 4, 3, 2, 1]
>>> original.print_sorted()
[1, 2, 3, 4, 5]
>>> print(original)
[5, 4, 3, 2, 1]
